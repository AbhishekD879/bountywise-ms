# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: abhishekorg
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: bountywise
# "service" is the name of this project. This will also be added to your AWS resource names.
service: bountywise-services

provider:
  name: aws
  runtime: nodejs20.x
  environment:
    NODE_ENV: ${env:NODE_ENV,"development"}
    DATABASE_URL: ${env:DATABASE_URL,"dummy_database_url"}
    DATABASE_NAME: ${env:DATABASE_NAME,"dummy_database_name"}
    DATABASE_USER: ${env:DATABASE_USER,"dummy_database_user"}
    DATABASE_PASSWORD: ${env:DATABASE_PASSWORD,"dummy_database_password"}
    DATABASE_PORT: ${env:DATABASE_PORT,"dummy_database_port"}
    BOUNTY_SERVICE_URL: "/api/bounty/"
    TAGS_SERVICE_URL: "/api/tags/"

functions:
  auth-authorizor:
    handler: services/auth-authorizor/handler.handler
    events:
      - http:
          method: any
          path: "/"

  bounty-services:
    handler: services/bounty-services/handler.handler
    events:
      - http:
          method: any
          path: ${self:provider.environment.BOUNTY_SERVICE_URL}{any+}
          authorizer:
            auth-authorizor

  tags-services:
    handler: services/tags-services/handler.handler
    events:
      - http:
          method: any
          path: ${self:provider.environment.TAGS_SERVICE_URL}{any+}
          authorizer:
            auth-authorizor

plugins:
  - serverless-offline
